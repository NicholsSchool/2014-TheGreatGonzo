// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "ThrowBall.h"
ThrowBall::ThrowBall() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::throwerArm);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intakeArm);
	
	// Booleans set as current state of Thrower Arm.
	readyToShoot = false;
	reachedTop = false;
	reachedBottom = false;
	finishedCycle = false;
}
// Called just before this Command runs the first time.
void ThrowBall::Initialize() {
	ThrowBall::readyToShoot = false;
	ThrowBall::reachedTop = false;
	ThrowBall::reachedBottom = false;
	ThrowBall::finishedCycle = false;
}
// Called repeatedly when this Command is scheduled to run.
void ThrowBall::Execute() {
	
	// add if/else conditions to the dashboard
	SmartDashboard::PutBoolean( "Thrower Arm Variable: readyToShoot", ThrowBall::readyToShoot );
	SmartDashboard::PutBoolean( "Thrower Arm Variable: reachedTop", ThrowBall::reachedTop );
	SmartDashboard::PutBoolean( "Thrower Arm Variable: reachedBottom", ThrowBall::reachedBottom );
	SmartDashboard::PutBoolean( "Thrower Arm Variable: finishedCycle", ThrowBall::finishedCycle );
	
	// power the motor when intake arm is fully extended
	if(ThrowBall::readyToShoot){
		if(Robot::intakeArm->isFullyExtendedForward()){
			if(ThrowBall::reachedTop){
				Robot::throwerArm->moveMotorsForward(0.25);
			} else {
				Robot::throwerArm->moveMotorsForward(0.95);
			}
		}
	}
	if(Robot::throwerArm->isFullyExtendedUp()){
		ThrowBall::reachedTop = true;
	}
	if(Robot::throwerArm->isFullyRetractedDown()){
		ThrowBall::readyToShoot = true;
		if(ThrowBall::reachedTop == true){
			ThrowBall::finishedCycle = true;
		}
	}
}
// Make this return true when this Command no longer needs to run execute()
bool ThrowBall::IsFinished() {
	if(ThrowBall::finishedCycle){
		return true;
	} else {
		return false;
	}
}
// Called once after isFinished returns true
void ThrowBall::End() {
	ThrowBall::readyToShoot = false;
	ThrowBall::reachedTop = false;
	ThrowBall::reachedBottom = false;
	ThrowBall::finishedCycle = false;
	Robot::throwerArm->stopThrowerMotors();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ThrowBall::Interrupted() {
	ThrowBall::readyToShoot = false;
	ThrowBall::reachedTop = false;
	ThrowBall::reachedBottom = false;
	ThrowBall::finishedCycle = false;
	Robot::throwerArm->stopThrowerMotors();
}
